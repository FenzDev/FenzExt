<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
		<ReferencingProjectRoot>$(MSBuildProjectDirectory)</ReferencingProjectRoot>
    </PropertyGroup>


	<PropertyGroup Condition="'$(AssetsSourcePath)'==''">
		<AssetsSourcePath>Content</AssetsSourcePath>
	</PropertyGroup>

	<PropertyGroup>
		<AssetsSourceFullPath>$(ReferencingProjectRoot)/$(AssetsSourcePath)</AssetsSourceFullPath>
	</PropertyGroup>

	
	<PropertyGroup>
	  <AssetsConfigTargetPath>$(ReferencingProjectRoot)/AssetsConfig.json</AssetsConfigTargetPath>
	  <BuildingToolDir>$(MSBuildThisFileDirectory)Fenzwork.BuildingTools/bin/$(Configuration)/net8.0</BuildingToolDir>
	  <BuildingToolPath>$(BuildingToolDir)/Fenzwork.BuildingTools.dll</BuildingToolPath>
	  <MGCBAutoGeneratedFilePath>$(AssetsSourceFullPath)/.mgcref.cache</MGCBAutoGeneratedFilePath>
	</PropertyGroup>

	<Target Name="EnsureJsonFileCopied" BeforeTargets="BeforeBuild">
		<PropertyGroup>
			<AssetsConfigTemplatePath>$(MSBuildThisFileDirectory)AssetsConfig.json</AssetsConfigTemplatePath>	
        </PropertyGroup>
      <Copy
        Condition="!Exists('$(AssetsConfigTargetPath)')"
        SourceFiles="$(AssetsConfigTemplatePath)"
        DestinationFiles="$(AssetsConfigTargetPath)" />

	</Target>

	<Target Name="GenerateItems" BeforeTargets="RunBuildingTool">
		<ItemGroup >
			<FinalAssetDir Include="$(AssetsSourceFullPath)" />
			<FinalConfigFile Include="$(AssetsConfigTargetPath)" />
			<FinalMGCBFile Include="$(MGCBAutoGeneratedFilePath)"/>
		</ItemGroup>
    </Target>
	
	<Target Name="RunBuildingTool">
	  <Exec 
			  WorkingDirectory="$(ReferencingProjectRoot)"
			  Command="dotnet &quot;$(BuildingToolPath)&quot; &quot;@(FinalConfigFile->'%(FullPath)')&quot; &quot;@(FinalAssetDir->'%(FullPath)')&quot; &quot;@(FinalMGCBFile->'%(FullPath)')&quot;" />
	</Target>

	<Target Name="RunBuildingToolWithPlatform" Condition="'$(MonoGamePlatform)'!=''" BeforeTargets="CollectContentReferences">
		<CallTarget Condition="Exists($(AssetsSourceFullPath))" Targets="RunBuildingTool"/>
    </Target>

	<Target Name="RunBuildingToolNoPlatform" Condition="'$(MonoGamePlatform)'==''" BeforeTargets="Build">
		<CallTarget Condition="Exists($(AssetsSourceFullPath))" Targets="RunBuildingTool"/>
    </Target>

	<Target Name="IncludeAutoGeneratedMGCB" AfterTargets="RunBuildingTool">
		<ItemGroup>
			<MonoGameContentReference Include="@(FinalMGCBFile)"/>
        </ItemGroup>
    </Target>

	<Target Name="CleanAutoGeneratedMGCBRebuild" BeforeTargets="BeforeRebuild">
		<CallTarget Targets="CleanAutoGeneratedMGCB"/>
    </Target>
	<Target Name="CleanAutoGeneratedMGCBClean" BeforeTargets="Clean">
		<CallTarget Targets="CleanAutoGeneratedMGCB"/>
    </Target>

	<Target Name="CleanAutoGeneratedMGCB">
		<Delete Files="$(MGCBAutoGeneratedFilePath)"
				TreatErrorsAsWarnings="True"/>
		<Delete Files="$(AssetsSourceFullPath)/bin/**"
				TreatErrorsAsWarnings="True"/>
    </Target>

	<Target Name="RetrieveProjectsContent" BeforeTargets="CollectContentReferences" Condition="'$(MonoGamePlatform)'!=''">
	  <!-- Create items from ProjectReference paths -->
	  <ItemGroup>
		<!-- Add metadata to project references if not already present -->
		<_ReferencedProjectDir Include="@(ProjectReference)">
		  <ProjectDir>$([System.IO.Path]::GetDirectoryName('%(Identity)'))</ProjectDir>
		</_ReferencedProjectDir>
	  </ItemGroup>

	  <ItemGroup>
		<!-- Use globbing to find .cache.mgcref in each reference -->
		<MonoGameContentReference Include="%( _ReferencedProjectDir.ProjectDir )\**\.mgcref.cache" />
	  </ItemGroup>
	</Target>

	
	<PropertyGroup>
		<AutoGenAssetsInfoFileName>Fenzwork._AutoGen.AssetsInfo.cs</AutoGenAssetsInfoFileName>
		<AssetsInfoWorkinDir Condition="'$(Configuration)'=='Debug'">$([MSBuild]::NormalizeDirectory($(AssetsSourceFullPath)).Replace("\", "/"))</AssetsInfoWorkinDir>
		<AssetsInfoWorkinDir Condition="'$(Configuration)'!='Debug'"></AssetsInfoWorkinDir>
	</PropertyGroup>

	<Target Name="GenerateAssetsInfo" BeforeTargets="CoreCompile">
		<WriteLinesToFile
		  File="$(IntermediateOutputPath)$(AutoGenAssetsInfoFileName)"
		  Lines=' 
namespace Fenzwork._AutoGen.$(MSBuildProjectName)
{
	static class AssetsInfo
	{
		public const string WorkingDir = "$(AssetsInfoWorkinDir)"%3B
	}
}'
		  Overwrite="true" />
		<ItemGroup>
			<Compile Include="$(IntermediateOutputPath)$(AutoGenAssetsInfoFileName)" AutoGen="true" />
		</ItemGroup>
	</Target>
	
	<Target Name="DeleteAssetsInfoClean" BeforeTargets="Clean">
		<Delete Files="$(AutoGenAssetsInfoPath)" TreatErrorsAsWarnings="true"/>
    </Target>
	
	<Import Project="Core.targets"/>

</Project>
